name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-ubuntu:
    name: Build - Ubuntu
    runs-on: ubuntu-latest

    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg_binary_cache

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build

      - name: Prepare to cache Vcpkg
        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}

      - uses: actions/cache@v3
        env:
          cache-name: vcpkg-cache
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: ${{ runner.os }}-vcpkg

      - name: Configure
        run: ./run configure

      - name: Build
        run: ./run build

      - name: Test
        run: ./run test

  build-windows:
    name: Build - Windows
    runs-on: windows-latest

    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}\vcpkg_binary_cache

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Prepare to cache Vcpkg
        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}

      - uses: actions/cache@v3
        env:
          cache-name: vcpkg-cache
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: ${{ runner.os }}-vcpkg

      - name: Configure
        run: |
          $hash = git rev-parse HEAD:vcpkg
          Push-Location C:\vcpkg
          git fetch $hash
          git checkout $hash
          Pop-Location
          .\run configure-on-ci

      - name: Build
        run: .\run build

      - name: Test
        run: .\run test

  build-macos:
    name: Build - macOS
    runs-on: macos-latest

    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg_binary_cache

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Prerequisites
        run: brew install cmake llvm ninja

      - name: Prepare to cache Vcpkg
        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}

      - uses: actions/cache@v3
        env:
          cache-name: vcpkg-cache
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: ${{ runner.os }}-vcpkg

      - name: Configure
        run: ./run configure

      - name: Build
        run: ./run build

      - name: Test
        run: ./run test
