language: cpp
sudo: required
dist: xenial

env:
  global:
    - MAKEFLAGS=-j5
    - OMP_NUM_THREADS=4

compiler:
  - gcc
  - clang

before_install:
  - lscpu
  - curl https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB | sudo apt-key add -
  - sudo sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list'
  - sudo apt-get update -qq

install:
# Intel OpenMP (for building with Clang)
  - if [ "$CXX" == "clang++" ]; then
      sudo apt-get install -y libiomp-dev;
    fi
# Intel MKL
  - sudo apt-get install -y intel-mkl-64bit-2018.1-038
# Eigen
  - sudo apt-get install -y libeigen3-dev
# Google Test
  - sudo apt-get install -y libgtest-dev
  - cd
  - mkdir gtest-build; cd gtest-build/
  - cmake /usr/src/gtest/
  - make
  - sudo cp *.a /usr/local/lib/
# Ceres Solver
  - sudo apt-get install -y libgoogle-glog-dev
  - cd
  - git clone --depth=1 https://ceres-solver.googlesource.com/ceres-solver
  - cd ceres-solver
  - mkdir build; cd build/
  - cmake .. -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DCMAKE_LIBRARY_PATH=/opt/intel/mkl/lib/intel64 -DCXSPARSE=OFF -DEIGENSPARSE=OFF -DGFLAGS=OFF -DSCHUR_SPECIALIZATIONS=OFF -DSUITESPARSE=OFF
  - make
  - sudo make install
# FLANN
  - sudo apt-get install -y libflann-dev
# Boost
  - cd
  - wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.bz2
  - tar xfj boost_1_65_1.tar.bz2
  - cd boost_1_65_1
  - ./bootstrap.sh
  - ./b2 link=static --with-program_options install -d0 -j4 --prefix=.

before_script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir build && cd build

script:
  - cmake .. -DBOOST_ROOT=~/boost_1_65_1 -DCMAKE_BUILD_TYPE=Release
  - make
  - ctest -VV
  - $TRAVIS_BUILD_DIR/tools/inspection/inspect
  - sudo make install

branches:
  only:
    - master

notifications:
  email: false
  slack:
    secure: kn9eTphQ9g/EGA3dJSaJCgL59u04jCZCdhUm6+blw+smnbGd16Rn6doTKdLUHl98+xtra+XY6nCZsxh2uClUd2/95YfXuPd7XMzTymFuo/O+BD4L5ZFjhzAuXtlD/h97ftUpACARqfWlDuKti186OoZ9ln6BJpS0Eq40ILPijNpJachhj6nNOWoK5iIN2oxdIqobMQ4U+Axk9/M0f6oRCdrVZ2uNJJFmQg9FLSzCd2pnJVRvw6jnWbHJc+mV4O38mYOdohj57gy4FSo7FOC0nPFGJXGKT8RIQBiWzI4RvF/TtaWEUfak7xTvcnfprLzeHSMt1pZfqDCAbkPddBIZovUHS8f1RToiuslcIg8heWSDd5Bth444ET7RnnVfVbWuyZm28g9u57SZ2CpXlnSwmqpp0ozD7aCETfUEsluVP+bJTlz+nvgKdVZghZzeo42lbm4f4lVUfsgiVJv7DF3tRLIBG5gCAw1dzsN2qX70TaXaCTtEuaXX9SqNE3r/NuyznqEaP1DRI4M5OX+TCLW9oIJnRF3Hzy24sT5Q+E8lA2C5iys4xfwLtOFU332DN8ZW6dZU09ncHqjpfZIgxzkudlaRlXE52Jg35vtZCovuVJHQdzvqDO1CVT9JF6s2P9Iqm5y9wRvL08T4nmEoxHkxP/KIp8duiaLPAaBSt4SgDlE=
