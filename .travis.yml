sudo: required
dist: trusty
language: minimal

services:
  - docker

env:
  global:
    - MAKEFLAGS=-j5
    - OMP_NUM_THREADS=4
  matrix:
    - CXX=g++
    - CXX=clang++

before_install:
  - lscpu
  - docker pull ubuntu:16.04
  - docker run -w /root --name test -d -e CXX=${CXX} -e MAKEFLAGS=${MAKEFLAGS} -e OMP_NUM_THREADS=${OMP_NUM_THREADS} ubuntu:16.04 sleep infinity
  - docker cp . test:/root/polatory

  - docker exec test apt-get update -qq
  - docker exec test apt-get install -qq apt-transport-https cmake git python wget

  - docker exec test sh -c 'wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB  -O - | apt-key add -'
  - docker exec test sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list'
  - docker exec test apt-get update -qq

install:
# Intel OpenMP (for building with Clang)
  - if [ "$CXX" == "clang++" ]; then
      docker exec test apt-get install -qq clang libiomp-dev;
    fi
# Intel MKL
  - docker exec test apt-get install -qq intel-mkl-64bit-2018.1-038
# Eigen
  - docker exec test apt-get install -qq libeigen3-dev
# Google Test
  - docker exec test apt-get install -qq libgtest-dev
  - docker exec test sh -c 'mkdir gtest-build && cd gtest-build && cmake /usr/src/gtest/ && make && cp *.a /usr/local/lib/'
# Ceres Solver
  - docker exec test apt-get install -qq libgoogle-glog-dev
  - docker exec test git clone --depth=1 https://ceres-solver.googlesource.com/ceres-solver
  - docker exec test sh -c 'cd ceres-solver && mkdir build && cd build && cmake .. -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DCMAKE_LIBRARY_PATH=/opt/intel/mkl/lib/intel64 -DCXSPARSE=OFF -DEIGENSPARSE=OFF -DGFLAGS=OFF -DSCHUR_SPECIALIZATIONS=OFF -DSUITESPARSE=OFF && make && make install'
# FLANN
  - docker exec test apt-get install -qq libflann-dev
# Boost
  - docker exec test wget -q https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.bz2
  - docker exec test tar xfj boost_1_65_1.tar.bz2
  - docker exec test sh -c 'cd boost_1_65_1 && ./bootstrap.sh && ./b2 link=shared --with-filesystem --with-program_options --with-serialization --with-system install -d0 -j5 --prefix=.'

before_script:
  - docker exec test sh -c 'cd polatory && mkdir build'

script:
  - docker exec test sh -c 'cd polatory/build && cmake .. -DBOOST_ROOT=~/boost_1_65_1 -DCMAKE_BUILD_TYPE=Release'
  - docker exec test sh -c 'cd polatory/build && make'
  - docker exec test sh -c 'cd polatory/build && ctest -VV'
  - docker exec test sh -c 'cd polatory && tools/inspection/inspect'
  - docker exec test sh -c 'cd polatory/build && make install'

branches:
  only:
    - master

notifications:
  email: false
  slack:
    secure: kn9eTphQ9g/EGA3dJSaJCgL59u04jCZCdhUm6+blw+smnbGd16Rn6doTKdLUHl98+xtra+XY6nCZsxh2uClUd2/95YfXuPd7XMzTymFuo/O+BD4L5ZFjhzAuXtlD/h97ftUpACARqfWlDuKti186OoZ9ln6BJpS0Eq40ILPijNpJachhj6nNOWoK5iIN2oxdIqobMQ4U+Axk9/M0f6oRCdrVZ2uNJJFmQg9FLSzCd2pnJVRvw6jnWbHJc+mV4O38mYOdohj57gy4FSo7FOC0nPFGJXGKT8RIQBiWzI4RvF/TtaWEUfak7xTvcnfprLzeHSMt1pZfqDCAbkPddBIZovUHS8f1RToiuslcIg8heWSDd5Bth444ET7RnnVfVbWuyZm28g9u57SZ2CpXlnSwmqpp0ozD7aCETfUEsluVP+bJTlz+nvgKdVZghZzeo42lbm4f4lVUfsgiVJv7DF3tRLIBG5gCAw1dzsN2qX70TaXaCTtEuaXX9SqNE3r/NuyznqEaP1DRI4M5OX+TCLW9oIJnRF3Hzy24sT5Q+E8lA2C5iys4xfwLtOFU332DN8ZW6dZU09ncHqjpfZIgxzkudlaRlXE52Jg35vtZCovuVJHQdzvqDO1CVT9JF6s2P9Iqm5y9wRvL08T4nmEoxHkxP/KIp8duiaLPAaBSt4SgDlE=
