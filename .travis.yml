dist: xenial
language: minimal

services:
  - docker

env:
  global:
    - MAKE_JOBS="$(($(nproc) + 1))"
    - MAKEFLAGS=-j$MAKE_JOBS
    - OMP_NUM_THREADS=$(nproc)
    - VCPKG_VERSION=2019.07

matrix:
  include:
    - name: "Ubuntu 18.04 - GCC"
      env:
      - UBUNTU_VERSION=18.04
      - CC=gcc
      - CXX=g++
      - CMAKE=cmake
      - CTEST=ctest
      - TRAVIS_BUILD_TYPE=test
    - name: "Ubuntu 18.04 - Clang"
      env:
      - UBUNTU_VERSION=18.04
      - CC=clang
      - CXX=clang++
      - CMAKE=cmake
      - CTEST=ctest
      - TRAVIS_BUILD_TYPE=test
    - name: "Static Analysis"
      env:
      - UBUNTU_VERSION=18.04
      - CC=clang
      - CXX=clang++
      - CMAKE=cmake
      - TRAVIS_BUILD_TYPE=static-analysis
      if: type IN (push, pull_request)

cache:
  directories:
    - $HOME/vcpkg-installed

before_install:
  - docker pull ubuntu:${UBUNTU_VERSION}
  - docker run -w /root --name test -d -e CC=${CC} -e CXX=${CXX} -e MAKEFLAGS=${MAKEFLAGS} -e OMP_NUM_THREADS=${OMP_NUM_THREADS} ubuntu:${UBUNTU_VERSION} sleep infinity
  - docker cp $TRAVIS_BUILD_DIR test:/root
  - docker exec test apt-get update -qq
  - docker exec test apt-get install -qq apt-transport-https build-essential cmake curl git gnupg lsb-release ninja-build python unzip wget
  - if [ "$CXX" = "clang++" ]; then
      docker exec test apt-get install -qq clang libomp-dev;
    fi
  - if [ "$TRAVIS_BUILD_TYPE" = "static-analysis" ]; then
      docker exec test apt-get install -qq clang-tidy;
    fi
  - docker exec test sh -c "wget -nv https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB -O - | apt-key add -"
  - docker exec test sh -c "echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list"
  - docker exec test apt-get update -qq

install:
  # Intel MKL
  - docker exec test apt-get install -qq intel-mkl-64bit-2018.3-051
  # Boost
  - docker exec test wget -nv https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.bz2
  - docker exec test tar xjf boost_1_69_0.tar.bz2
  - docker exec test sh -c "cd boost_1_69_0 && ./bootstrap.sh && ./b2 link=static --with-filesystem --with-program_options --with-serialization --with-system install -d0 -j$MAKE_JOBS --prefix=."
  # Other libraries
  - docker exec test git clone -b ${VCPKG_VERSION} --depth 1 https://github.com/Microsoft/vcpkg.git
  - if [ -n "$(ls $HOME/vcpkg-installed)" ]; then
      docker cp $HOME/vcpkg-installed/. test:/root/vcpkg/installed;
    fi
  - docker exec test sh -c "cd vcpkg && ./bootstrap-vcpkg.sh"
  - docker exec test sh -c "cd vcpkg && echo 'set(VCPKG_BUILD_TYPE release)' >> triplets/x64-linux.cmake"
  - docker exec test sh -c "cd vcpkg && ./vcpkg remove --outdated --recurse"
  - docker exec test sh -c "cd vcpkg && ./vcpkg install abseil ceres eigen3 flann gsl-lite gtest --triplet x64-linux"
  - docker cp test:/root/vcpkg/installed/. $HOME/vcpkg-installed

before_script:
  - lscpu
  - docker exec test lsb_release -a
  - docker exec test $CMAKE --version
  - docker exec test ninja --version
  - docker exec test $CXX --version

script:
  - docker exec test sh -c "cd polatory && mkdir build"
  - if [ "$TRAVIS_BUILD_TYPE" = "test" ]; then docker exec test sh -c "cd polatory/build && $CMAKE .. -GNinja -DCMAKE_TOOLCHAIN_FILE=~/vcpkg/scripts/buildsystems/vcpkg.cmake -DBOOST_ROOT=~/boost_1_69_0"; fi
  - if [ "$TRAVIS_BUILD_TYPE" = "test" ]; then docker exec test sh -c "cd polatory/build && ninja"; fi
  - if [ "$TRAVIS_BUILD_TYPE" = "test" ]; then docker exec test sh -c "cd polatory/build && $CTEST -V"; fi
  - if [ "$TRAVIS_BUILD_TYPE" = "test" ]; then docker exec test sh -c "cd polatory/build && ninja install"; fi
  - if [ "$TRAVIS_BUILD_TYPE" = "static-analysis" ]; then docker exec test sh -c "cd polatory/build && $CMAKE .. -GNinja -DCMAKE_TOOLCHAIN_FILE=~/vcpkg/scripts/buildsystems/vcpkg.cmake -DBOOST_ROOT=~/boost_1_69_0 -DENABLE_CLANG_TIDY=ON"; fi
  - if [ "$TRAVIS_BUILD_TYPE" = "static-analysis" ]; then travis_wait docker exec test sh -c "cd polatory/build && ninja clang-tidy"; fi
  - if [ "$TRAVIS_BUILD_TYPE" = "static-analysis" ]; then docker exec test sh -c "cd polatory && tools/run-cpplint"; fi

branches:
  only:
    - master

notifications:
  email: false
  slack:
    secure: kn9eTphQ9g/EGA3dJSaJCgL59u04jCZCdhUm6+blw+smnbGd16Rn6doTKdLUHl98+xtra+XY6nCZsxh2uClUd2/95YfXuPd7XMzTymFuo/O+BD4L5ZFjhzAuXtlD/h97ftUpACARqfWlDuKti186OoZ9ln6BJpS0Eq40ILPijNpJachhj6nNOWoK5iIN2oxdIqobMQ4U+Axk9/M0f6oRCdrVZ2uNJJFmQg9FLSzCd2pnJVRvw6jnWbHJc+mV4O38mYOdohj57gy4FSo7FOC0nPFGJXGKT8RIQBiWzI4RvF/TtaWEUfak7xTvcnfprLzeHSMt1pZfqDCAbkPddBIZovUHS8f1RToiuslcIg8heWSDd5Bth444ET7RnnVfVbWuyZm28g9u57SZ2CpXlnSwmqpp0ozD7aCETfUEsluVP+bJTlz+nvgKdVZghZzeo42lbm4f4lVUfsgiVJv7DF3tRLIBG5gCAw1dzsN2qX70TaXaCTtEuaXX9SqNE3r/NuyznqEaP1DRI4M5OX+TCLW9oIJnRF3Hzy24sT5Q+E8lA2C5iys4xfwLtOFU332DN8ZW6dZU09ncHqjpfZIgxzkudlaRlXE52Jg35vtZCovuVJHQdzvqDO1CVT9JF6s2P9Iqm5y9wRvL08T4nmEoxHkxP/KIp8duiaLPAaBSt4SgDlE=
